{"version":3,"sources":["components/layouts/Header.js","components/App.js","store/api.js","store/actions/types.js","store/actions/index.js","components/pages/auth/Signin.js","components/pages/auth/Signout.js","components/pages/dashboard/Dashboard.js","HOC/requireAuth.js","store/reducers/auth.js","store/reducers/index.js","index.js","components/pages/Home.js"],"names":["Header","this","props","userID","to","className","renderLinks","Component","connect","state","auth","children","api","AUTH_GET_CLIENTID","AUTH_GET_USERID","AUTH_ERROR","signin","formProps","callback","dispatch","a","axios","post","service","username","password","appID","company","branch","module","refID","getClientIDResponse","clientID","data","SqlName","param1","param2","getUserIDResponse","type","payload","rows","users","localStorage","setItem","signout","removeItem","Signin","onSubmit","history","push","handleSubmit","Field","name","component","autoComplete","errorMessage","compose","actions","reduxForm","form","Signout","Dashboard","requireAuth","ChildComponent","ComposedComponent","shouldNavigateAway","INITIAL_STATE","combineReducers","action","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","reducers","getItem","applyMiddleware","reduxThunk","reactDom","render","App","exact","path","document","querySelector"],"mappings":"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","file":"static/js/main.796be015.chunk.js","sourcesContent":["import React, { Component }  from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport '../../css/layouts/HeaderStyles.css';\n\nclass Header extends Component {\n\n    // Show different header links if user is signed in\n    renderLinks() {\n        if (this.props.userID) {\n            return (\n                <div>\n                    <Link to=\"/dashboard\">Dashboard</Link>\n                    <Link to=\"/signout\">Sign out</Link>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Link to=\"/signin\">Sign in</Link>\n                </div>\n            );\n        }\n    }\n\n    render () {\n        return (\n            <div className=\"header\">\n                <Link to=\"/\">Home</Link>\n                {this.renderLinks()}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps( state ) {\n    return { userID: state.auth.userID };\n}\n\nexport default connect( mapStateToProps )(Header);","import React  from \"react\";\n\nimport Header from './layouts/Header';\n\nexport default ({ children }) => {\n    return (\n        <div>\n            <Header />\n            { children }\n        </div>\n    );\n};","// Softone API Url\nexport const api = 'https://still-term-0a01.anayia.workers.dev/?https://progress.oncloud.gr/s1services';","// Authentication\nexport const AUTH_GET_CLIENTID = 'auth_get_clientid';\nexport const AUTH_GET_USERID = 'auth_get_userid';\nexport const AUTH_ERROR = 'auth_error';","import axios from 'axios';\n\nimport { api } from '../api';\nimport { AUTH_GET_CLIENTID, AUTH_GET_USERID, AUTH_ERROR } from './types';\n\n// Authentication Sign in\nexport const signin = ( formProps, callback )=> async dispatch => {\n    try {\n        const getClientIDResponse = await axios.post(api, {\n            service: 'login',\n            username: 'progressinc',\n            password: 'progressinc1@3$56',\n            appID: '1001',\n            company: '1',\n            branch: '1000',\n            module: '0',\n            refID: '1111'\n        });\n\n        const getUserIDResponse = await axios.post(api, {\n            service: 'SqlData',\n            clientID: getClientIDResponse.data.clientID,\n            appID: '1001',\n            SqlName: '6100',\n            param1: formProps.username,\n            param2: formProps.password\n        });\n\n        // console.log(getUserIDResponse.data.rows[0].users);\n\n        dispatch({ type: AUTH_GET_CLIENTID, payload: getClientIDResponse.data.clientID });\n        dispatch({ type: AUTH_GET_USERID, payload: getUserIDResponse.data.rows[0].users });\n        // Stores userID in browser's local storage\n        localStorage.setItem( 'userID', getUserIDResponse.data.rows[0].users );\n        callback();\n    } catch (e) {\n        dispatch({ type: AUTH_ERROR, payload: 'Wrong credentials' });\n    }\n};\n\n// Authentication Sign out\nexport const signout = () => {\n    localStorage.removeItem('userID');\n\n    return {\n        type: AUTH_GET_USERID,\n        payload: ''\n    }\n};","import React, { Component } from \"react\";\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nimport * as actions from '../../../store/actions';\n\nclass Signin extends Component {\n\n    onSubmit = (formProps) => {\n        // console.log(formProps);\n        this.props.signin( formProps, () => {\n            this.props.history.push('/dashboard');\n        });\n    }\n\n    render () {\n\n        const { handleSubmit } = this.props;\n\n        return (\n            <form onSubmit={ handleSubmit(this.onSubmit) }>\n                <fieldset>\n                    <label>Username</label>\n                    <Field\n                        name=\"username\"\n                        type=\"text\"\n                        component=\"input\"\n                        autoComplete=\"none\"\n                    />\n                </fieldset>\n\n                <fieldset>\n                    <label>Password</label>\n                    <Field\n                        name=\"password\"\n                        type=\"password\"\n                        component=\"input\"\n                        autoComplete=\"none\"\n                    />\n                </fieldset>\n                <button>Sign in</button>\n                <div>{this.props.errorMessage}</div>\n            </form>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { errorMessage: state.auth.errorMessage };\n}\n\nexport default compose(\n    connect( mapStateToProps, actions ),\n    reduxForm({ form: 'signin' })\n)(Signin);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../store/actions';\n\nclass Signout extends Component {\n\n    componentDidMount() {\n        this.props.signout();\n    }\n\n    render() {\n        return <div>Sorry to see you go</div>\n    }\n};\n\nexport default connect(null, actions)(Signout);","import React, { Component } from 'react';\n\nimport requireAuth from '../../../HOC/requireAuth';\n\nclass Dashboard extends Component {\n    render() {\n        return (\n            <div>Dashboard page</div>\n        )\n    }\n}\n\nexport default requireAuth(Dashboard);","// Disable access to components if a user is not signed in\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nexport default ChildComponent => {\n  class ComposedComponent extends Component {\n    // Our component just got rendered\n    componentDidMount() {\n      this.shouldNavigateAway();\n    }\n    // Our component just got updated\n    componentDidUpdate() {\n      this.shouldNavigateAway();\n    }\n    shouldNavigateAway() {\n      if (!this.props.auth) {\n        this.props.history.push('/');\n      }\n    }\n    render() {\n      return <ChildComponent {...this.props} />;\n    }\n  }\n  // Checks to see id state has userID value \n  function mapStateToProps(state) {\n    return { auth: state.auth.userID };\n  }\n  return connect(mapStateToProps)(ComposedComponent);\n};\n","import { AUTH_GET_CLIENTID, AUTH_GET_USERID, AUTH_ERROR } from '../actions/types';\n\nconst INITIAL_STATE = {\n    clientID: '',\n    userID: '',\n    errorMessage: ''\n}\n\nexport default function( state = INITIAL_STATE, action ) {\n    switch (action.type) {\n        case AUTH_GET_CLIENTID:\n            return { ...state, clientID: action.payload };\n        case AUTH_GET_USERID:\n            return { ...state, userID: action.payload };\n        case AUTH_ERROR:\n            return { ...state, errorMessage: action.payload };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport auth from './auth';\n\nexport default combineReducers({\n    auth,\n    form: formReducer\n});","import React from 'react';\nimport reactDom from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\n// Components\nimport App from './components/App';\n\n// Pages\nimport Home from './components/pages/Home';\nimport Signin from './components/pages/auth/Signin';\nimport Signout from './components/pages/auth/Signout';\nimport Dashboard from './components/pages/dashboard/Dashboard';\n\n// Reducers\nimport reducers from './store/reducers';\n\n// Remove when we dont want REDUX DEVTOOLS\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore (\n    reducers,\n    {\n        // Checks to see if user has signed in by searching the browser's local storage\n        auth: { userID: localStorage.getItem('userID') }\n    },\n    composeEnhancers(applyMiddleware(reduxThunk))\n    // Only leave applyMiddleware(reduxThunk) when we dont want REDUX DEVTOOLS\n)\n\nreactDom.render (\n    <Provider store={ store }>\n        <BrowserRouter>\n            <App>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/signin\" component={Signin} />\n                <Route path=\"/signout\" component={Signout} />\n                <Route path=\"/dashboard\" component={Dashboard} />\n            </App>\n        </BrowserRouter>\n    </Provider> ,\n    document.querySelector('#root')\n);","import React from \"react\";\n\nexport default () => {\n    return <h3>Welcome!</h3>\n};"],"sourceRoot":""}